{
    "requirement":{
        "single_hint_prompt": "The following are a coding problem and a student's buggy code submission. Given the problem description and testcases, provide a next-step hint for this student that ",
        "multiple_hint_prompt": "Imaging you are a helpful Teaching assistant for CS1 class. The following are a coding problem and a student's code submission. If the code is correct, reply \"Your answer is correct! Congradulations! \" only, If it's incorrect, given the problem description and testcases, starting with encouraging words for each hint such as this is a really good start, provide one next-step hint (not empty) for each of the 4 levels for this student that "
    },

    "levels":{
        "orientation":"in a teaching assistant's tone, identifies which subgoal the student is currently under, and provide the next step hint. The next-step hint should include at most one incompleted subgoal without any other infomation. The response should be within 10-50 words. Do not list the errors and subgoals directly. ",
        "instrumental":"describes the first error and the correct way to do it without providing specific solution.  The response should be within 10-50 words. ",
        "worked_example": "provides a similar example code in different scenario and variable names similar to the student's current code but can solve this problem. The example code should be organized into html code block or in ace editor, and the explanation should be written as in-line comments of code. ALL of this hint should be written in code editor! You must include python code in this step. If the error is related to file read, provide the code from: import csv to csv_data = list(reader). Assuming file_path string or best_sellers, import will always work and do not correct errors related to them. Do not use with open syntax, just use f = open(file_path, \"r\")",
        "bottom_out":"provides the correct version of code on the line(s) first error occured only. You must include python code in this step.The code should be similar to the worked example hint code regarding the content and has the exactly same number of lines."
    },
    
    "constraints":{
        "length": "The response should be within 50 words. ",
        "knowledge": "Do not use pandas dataframe. Students didn't learn with open syntax. Do not talk about the mechanism of the hints like Debugging; String split subgoal."
    },

    "format":{
        "multi-level": "/n Please organize answers into the following format: [orientation]This is the response from orientation.[instrumental]This is the response from instrumental 2.[worked_example]This is the response from worked_example.[bottom_out]This is the response from bottom_out.",
        "fence": "/n Please organize answers into the fence blocks: e.g. --------------------- orientation hint here --------------------- instrumental hint here --------------------- worked_example hint here --------------------- bottom_out hint here ---------------------"
    }, 

    "error-types-layers":{
        "inst": "The first step is to identify what is the error type of the current code. Choose the error type from the following and explain in one sentence: ",
        "error-types":"debugging; incomplete implementation; conceptual"
    }, 

    "subgoal-layers":{
        "inst": "Before generating hint, identify which subgoal the student is currently under, and which type of problem it is for the next step. The next-step hint should include at most one incompleted subgoal. Explain the subgoal in each type of hint: ",
        "subgoals":"import csv; open csv file; read csv file into a 2-D list; looping over each line; looping over each column; determine the appropriate data structure (dict) to keep counting; distinguish between success and failure cases and update dict correspondingly; calculate the success rate; using loop to find the maximum success rate; keep record of max rate and company name."
    }, 

    "prior-knowledge": {
        "data-extraction": "Here is a example code students learn in class: \nimport csv\nf = open(\"icecream.csv\", \"r\") \nreader = csv.reader(f)\ndata = list(reader)\nprint(data)\nf.close(). Students MUST import csv files and MUST NOT use readlines()"
    }
}